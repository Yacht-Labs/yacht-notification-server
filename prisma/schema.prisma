generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                      String                    @id @default(uuid())
  address                 String
  deviceId                String                    @db.VarChar(255)
  name                    String?
  isActive                Boolean                   @default(true)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  EulerHealthNotification EulerHealthNotification[]
}

model Token {
  id         String       @id @default(uuid())
  address    String
  chainId    Int
  name       String
  symbol     String
  price      String?
  decimals   Int
  logoURI    String?
  extensions Json?
  EulerToken EulerToken[]

  @@unique([address, chainId])
}

model EulerToken {
  id                  String                @id @default(uuid())
  address             String                @unique
  token               Token                 @relation(fields: [tokenId], references: [id])
  tokenId             String
  tier                String
  supplyAPY           Float
  borrowAPY           Float
  borrowFactor        Float
  collateralFactor    Float
  totalSupplyUSD      String
  totalBorrowsUSD     String
  eulAPY              Float
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  EulerIRNotification EulerIRNotification[]
}

model EulerIRNotification {
  id                   String     @id @default(uuid())
  token                EulerToken @relation(fields: [tokenAddress], references: [address])
  tokenAddress         String     @db.VarChar(255)
  deviceId             String     @db.VarChar(255)
  borrowAPY            Float?
  supplyAPY            Float?
  borrowUpperThreshold Int?
  borrowLowerThreshold Int?
  supplyUpperThreshold Int?
  supplyLowerThreshold Int?
  isActive             Boolean    @default(true)
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
}

model EulerHealthNotification {
  id             String   @id @default(uuid())
  account        Account  @relation(fields: [accountId], references: [id])
  thresholdValue Float
  isActive       Boolean  @default(true)
  accountId      String
  subAccountId   String
  deviceId       String   @db.VarChar(255)
  seen           Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
