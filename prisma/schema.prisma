generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                      String                    @id @default(uuid())
  address                 String
  deviceId                String                    @db.VarChar(255)
  name                    String?
  isActive                Boolean                   @default(true)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  EulerIRNotification     EulerIRNotification[]
  EulerHealthNotification EulerHealthNotification[]
}

model Token {
  address  String @id
  name     String
  symbol   String
  price    String
  decimals Int
}

model EulerToken {
  address             String                @id
  tier                String
  supplyAPY           Float
  borrowAPY           Float
  borrowFactor        Float
  collateralFactor    Float
  eulAPY              Float
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  EulerIRNotification EulerIRNotification[]
}

model EulerIRNotification {
  id              String     @id @default(uuid())
  account         Account    @relation(fields: [accountId], references: [id])
  token           EulerToken @relation(fields: [tokenAddress], references: [address])
  tokenAddress    String     @db.VarChar(255)
  accountId       String
  deviceId        String     @db.VarChar(255)
  borrowAPY       Float?
  supplyAPY       Float?
  borrowThreshold Int?
  supplyThreshold Int?
  isActive        Boolean    @default(true)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}

model EulerHealthNotification {
  id             String   @id @default(uuid())
  account        Account  @relation(fields: [accountId], references: [id])
  thresholdValue Float
  isActive       Boolean  @default(true)
  accountId      String
  deviceId       String   @db.VarChar(255)
  seen           Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
